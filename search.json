[{"title":"RCE(NewStarCTF week4)","date":"2022-10-17T09:58:57.000Z","url":"/2022/10/17/RCE1/","categories":[["undefined",""]],"content":"#RCE绕过##题目源码 ###分析RCE执行的位置在system($_GET[&quot;cmd&quot;]); 通过get方法传入一个叫cmd的参数，然后system执行。 可以看到源码通过preg_match过滤了很多，比如cat和tail等查看文件的命令。 我们需要做的就是绕过这一部分的同时并找到flag文件 ###绕过过滤并读取上层目录首先传入&#x2F;?cmd&#x3D;ls查看文件 可以看到当前文件夹下只有一个index.php文件。 而在这个地方，我在做题的时候犯了一个错误，那就是忘记了去上层目录查找flag文件。 于是盲目的在当前文件夹尝试各种命令，结果无功而返。 这里我们需要cd到上层目录同时执行ls查看当前目录，/?cmd=cd ..|ls 但是我们可以看到 ‘’| ‘’这个符号被过滤了。 通过查看别人的 wp 我知道了新的方法,利用&amp;&amp;进行命令拼接，但是要注意使用url编码的&amp;&amp;，即%26%26来代替，因为直接使用&amp;&amp;会被当做是分别传入了两个参数，导致命令被分割。 也就是/?cmd=cd ..%26%26ls 同时空格也被过滤了，但是我们可以使用${IFS}来代替空格。 即/?cmd=cd$&#123;IFS&#125;..%26%26ls 可以看到页面显示结果变了，也就是我们成功跳转到了上层目录并执行了ls，那么现在我们就需要通过连续跳转上层目录来找到flag文件。 执行多条命令拼接 /?cmd=cd$&#123;IFS&#125;..%26%26ls%26%26cd$&#123;IFS&#125;..%26%26ls%26%26cd$&#123;IFS&#125;..%26%26ls 即/?cmd=cd ..|ls|..|ls|..|ls，意思为多次跳转目录并查看当前目录的文件，拼接数可以自己决定。 当然每次都ls显得特别麻烦而且无关文件很多，所以命令可以简化一下 /?cmd=cd ..|..|..|ls(中间的”..”每加一次代表往上跳转一次) 那么利用方法绕过之后就会变成 /?cmd=cd$&#123;IFS&#125;..%26%26cd$&#123;IFS&#125;..%26%26cd$&#123;IFS&#125;..%26%26ls 可以看到我们找到了flag文件，名为ffffllllaaaagggg. ###绕过cat和fl那么我们目前需要的就是读取ffffllllaaaagggg文件 但是cat和fl都被过滤了，甚至连任意数量匹配符’*’也被过滤了，我们该怎么读取文件呢。 cat的话通过别人的wp我学到了新的方法，那就是利用空变量绕过。 比如cat可以在其中加入一个空的变量$1让其变为ca$1t，从而绕过检测，而在代码执行中，空变量会被忽略。也就是最后执行的就是cat。 而至于’*’被过滤，且fl被过滤，导致没办法利用任意数量匹配符来寻找文件，我们也可以利用单个匹配符‘?’来替换fl之间的连接，让其绕过检测。 即ffff?lllaaaaggg，这样中间的’fl’就会因为通配符而不存在，后端执行的时候就会找到符合的文件。 ##最终的payloadpayload=/?cmd=cd$&#123;IFS&#125;..%26%26ls%26%26cd$&#123;IFS&#125;..%26%26ls%26%26cd$&#123;IFS&#125;..%26%26ca$1t$&#123;IFS&#125;ffff%3Flllaaaaggggg "},{"title":"IncludeOne","date":"2022-10-16T00:33:54.000Z","url":"/2022/10/16/IncludeOne/","categories":[["undefined",""]],"content":"#文件包含漏洞1##题目使用mt_srand()且仅仅过滤base: ##关于mt_srand()mt_rand()是非加密PRNG(伪随机数生成器)，mt_srand(seed)中的seed为生成随机数的种子最大32位,但是仅仅32位的种子空间对于加密应用空间来说太小了。 这就意味着如果计算机的性能足够是可以推断出种子的，也就意味着可以预测接下来的数，代码中的Hint:1219893521就是提示，它是mt_rand()生成的，可以利用它来找到种子。 php_mt_seed - MT_RAND（）种子饼干 (openwall.com) 链接为工具下载地址。 ###工具的使用我的使用方法是将下载后的文件解压后放在kali虚拟机中 在文件夹内打开终端,使用 make进行编译 然后文件内就会出现齿轮图标的php_mt_seed 在终端内运行并传入参数 如上图程序为运行完成就可以看到已经找到了可能的种子 1145146 我们在vscode中运行该种子（我是用的vscode，别的运行php的软件也行） 可以看到一个值为1219893521也就是提示的值，这就意味着接下来生成的随机数值为1202031004也就是我们需要传入的$_POST[&#39;guess]&#39;的值 ##php伪协议，绕过base过滤###使用rot13?file=php://filter/read=string.rot13/NewStar/resource=flag.php ###使用双层编码php://filter/协议自带一层url解码，可以使用双层url编码绕过. ?file=php://filter/read=convert.ba%25%37%33e64-encode|NewStar/resource=flag.php "},{"title":"Hello World","date":"2022-10-13T08:58:03.145Z","url":"/2022/10/13/hello-world/","categories":[["undefined",""]],"content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post More info: Writing Run server More info: Server Generate static files More info: Generating Deploy to remote sites More info: Deployment"}]